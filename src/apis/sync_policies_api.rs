/*
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

use std::borrow::Borrow;
use std::rc::Rc;

use futures;
use futures::Future;
use hyper;

use super::{configuration, query, Error};

pub struct SyncPoliciesApiClient<C: hyper::client::connect::Connect> {
    configuration: Rc<configuration::Configuration<C>>,
}

impl<C: hyper::client::connect::Connect> SyncPoliciesApiClient<C> {
    pub fn new(configuration: Rc<configuration::Configuration<C>>) -> SyncPoliciesApiClient<C> {
        SyncPoliciesApiClient {
            configuration: configuration,
        }
    }
}

pub trait SyncPoliciesApi {
    fn create_policy_reset_item(
        &self,
        policy_reset_item: crate::models::Empty,
        policy: &str,
    ) -> Result<crate::models::CreateResponse, Error>;
}

impl<C: hyper::client::connect::Connect + 'static + std::marker::Sync + std::marker::Send + Clone> SyncPoliciesApi for SyncPoliciesApiClient<C> {
    fn create_policy_reset_item(
        &self,
        policy_reset_item: crate::models::Empty,
        policy: &str,
    ) -> Result<crate::models::CreateResponse, Error> {
        let uri_str = format!(
            "{}/platform/1/sync/policies/{Policy}/reset",
            self.configuration.base_path,
            Policy = policy
        );
        query(
            self.configuration.borrow(),
            &uri_str,
            &policy_reset_item,
            hyper::Method::POST,
        )
    }
}
