/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct AdsProviderSearchObject {
  #[serde(rename = "description")]
  description: Option<String>,
  #[serde(rename = "display_name")]
  display_name: Option<String>,
  /// Specifies properties for a persona, which consists of either a 'type' and a 'name' or an 'ID'.
  #[serde(rename = "id")]
  id: Option<::models::AuthAccessAccessItemFileGroup>
}

impl AdsProviderSearchObject {
  pub fn new() -> AdsProviderSearchObject {
    AdsProviderSearchObject {
      description: None,
      display_name: None,
      id: None
    }
  }

  pub fn set_description(&mut self, description: String) {
    self.description = Some(description);
  }

  pub fn with_description(mut self, description: String) -> AdsProviderSearchObject {
    self.description = Some(description);
    self
  }

  pub fn description(&self) -> Option<&String> {
    self.description.as_ref()
  }

  pub fn reset_description(&mut self) {
    self.description = None;
  }

  pub fn set_display_name(&mut self, display_name: String) {
    self.display_name = Some(display_name);
  }

  pub fn with_display_name(mut self, display_name: String) -> AdsProviderSearchObject {
    self.display_name = Some(display_name);
    self
  }

  pub fn display_name(&self) -> Option<&String> {
    self.display_name.as_ref()
  }

  pub fn reset_display_name(&mut self) {
    self.display_name = None;
  }

  pub fn set_id(&mut self, id: ::models::AuthAccessAccessItemFileGroup) {
    self.id = Some(id);
  }

  pub fn with_id(mut self, id: ::models::AuthAccessAccessItemFileGroup) -> AdsProviderSearchObject {
    self.id = Some(id);
    self
  }

  pub fn id(&self) -> Option<&::models::AuthAccessAccessItemFileGroup> {
    self.id.as_ref()
  }

  pub fn reset_id(&mut self) {
    self.id = None;
  }

}



