/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct SummaryProtocolStatsProtocolStatsCpu {
  /// Percentage of CPU idle time
  #[serde(rename = "idle")]
  idle: f32,
  /// Percentage of CPU consumed by the system
  #[serde(rename = "system")]
  system: f32,
  /// Percentage of CPU consumed by user activities
  #[serde(rename = "user")]
  user: f32
}

impl SummaryProtocolStatsProtocolStatsCpu {
  pub fn new(idle: f32, system: f32, user: f32) -> SummaryProtocolStatsProtocolStatsCpu {
    SummaryProtocolStatsProtocolStatsCpu {
      idle: idle,
      system: system,
      user: user
    }
  }

  pub fn set_idle(&mut self, idle: f32) {
    self.idle = idle;
  }

  pub fn with_idle(mut self, idle: f32) -> SummaryProtocolStatsProtocolStatsCpu {
    self.idle = idle;
    self
  }

  pub fn idle(&self) -> &f32 {
    &self.idle
  }


  pub fn set_system(&mut self, system: f32) {
    self.system = system;
  }

  pub fn with_system(mut self, system: f32) -> SummaryProtocolStatsProtocolStatsCpu {
    self.system = system;
    self
  }

  pub fn system(&self) -> &f32 {
    &self.system
  }


  pub fn set_user(&mut self, user: f32) {
    self.user = user;
  }

  pub fn with_user(mut self, user: f32) -> SummaryProtocolStatsProtocolStatsCpu {
    self.user = user;
    self
  }

  pub fn user(&self) -> &f32 {
    &self.user
  }


}



