/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// CreateNfsAliasResponse : Specifies the return value when an alias is successfully created or modified.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct CreateNfsAliasResponse {
  /// Specifies whether the alias is usable.
  #[serde(rename = "health")]
  health: Option<String>,
  /// Specifies a string which represents the unique location of the alias.
  #[serde(rename = "id")]
  id: String
}

impl CreateNfsAliasResponse {
  /// Specifies the return value when an alias is successfully created or modified.
  pub fn new(id: String) -> CreateNfsAliasResponse {
    CreateNfsAliasResponse {
      health: None,
      id: id
    }
  }

  pub fn set_health(&mut self, health: String) {
    self.health = Some(health);
  }

  pub fn with_health(mut self, health: String) -> CreateNfsAliasResponse {
    self.health = Some(health);
    self
  }

  pub fn health(&self) -> Option<&String> {
    self.health.as_ref()
  }

  pub fn reset_health(&mut self) {
    self.health = None;
  }

  pub fn set_id(&mut self, id: String) {
    self.id = id;
  }

  pub fn with_id(mut self, id: String) -> CreateNfsAliasResponse {
    self.id = id;
    self
  }

  pub fn id(&self) -> &String {
    &self.id
  }


}



