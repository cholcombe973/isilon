/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct MappingIdentityTargetCreateParams {
  /// Identity is preferred on-disk.
  #[serde(rename = "on_disk")]
  on_disk: Option<bool>,
  /// Specifies properties for a persona, which consists of either a 'type' and a 'name' or an 'ID'.
  #[serde(rename = "target")]
  target: ::models::AuthAccessAccessItemFileGroup,
  /// Origin of identity mapping.
  #[serde(rename = "type")]
  _type: Option<String>
}

impl MappingIdentityTargetCreateParams {
  pub fn new(target: ::models::AuthAccessAccessItemFileGroup) -> MappingIdentityTargetCreateParams {
    MappingIdentityTargetCreateParams {
      on_disk: None,
      target: target,
      _type: None
    }
  }

  pub fn set_on_disk(&mut self, on_disk: bool) {
    self.on_disk = Some(on_disk);
  }

  pub fn with_on_disk(mut self, on_disk: bool) -> MappingIdentityTargetCreateParams {
    self.on_disk = Some(on_disk);
    self
  }

  pub fn on_disk(&self) -> Option<&bool> {
    self.on_disk.as_ref()
  }

  pub fn reset_on_disk(&mut self) {
    self.on_disk = None;
  }

  pub fn set_target(&mut self, target: ::models::AuthAccessAccessItemFileGroup) {
    self.target = target;
  }

  pub fn with_target(mut self, target: ::models::AuthAccessAccessItemFileGroup) -> MappingIdentityTargetCreateParams {
    self.target = target;
    self
  }

  pub fn target(&self) -> &::models::AuthAccessAccessItemFileGroup {
    &self.target
  }


  pub fn set__type(&mut self, _type: String) {
    self._type = Some(_type);
  }

  pub fn with__type(mut self, _type: String) -> MappingIdentityTargetCreateParams {
    self._type = Some(_type);
    self
  }

  pub fn _type(&self) -> Option<&String> {
    self._type.as_ref()
  }

  pub fn reset__type(&mut self) {
    self._type = None;
  }

}



