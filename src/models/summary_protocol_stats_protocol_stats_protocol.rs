/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct SummaryProtocolStatsProtocolStatsProtocol {
  #[serde(rename = "data")]
  data: Vec<::models::SummaryProtocolStatsProtocolStatsProtocolDataItem>,
  /// The name of the protocol.
  #[serde(rename = "name")]
  name: Option<String>
}

impl SummaryProtocolStatsProtocolStatsProtocol {
  pub fn new(data: Vec<::models::SummaryProtocolStatsProtocolStatsProtocolDataItem>) -> SummaryProtocolStatsProtocolStatsProtocol {
    SummaryProtocolStatsProtocolStatsProtocol {
      data: data,
      name: None
    }
  }

  pub fn set_data(&mut self, data: Vec<::models::SummaryProtocolStatsProtocolStatsProtocolDataItem>) {
    self.data = data;
  }

  pub fn with_data(mut self, data: Vec<::models::SummaryProtocolStatsProtocolStatsProtocolDataItem>) -> SummaryProtocolStatsProtocolStatsProtocol {
    self.data = data;
    self
  }

  pub fn data(&self) -> &Vec<::models::SummaryProtocolStatsProtocolStatsProtocolDataItem> {
    &self.data
  }


  pub fn set_name(&mut self, name: String) {
    self.name = Some(name);
  }

  pub fn with_name(mut self, name: String) -> SummaryProtocolStatsProtocolStatsProtocol {
    self.name = Some(name);
    self
  }

  pub fn name(&self) -> Option<&String> {
    self.name.as_ref()
  }

  pub fn reset_name(&mut self) {
    self.name = None;
  }

}



