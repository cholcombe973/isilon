/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct RolePrivileges {
  #[serde(rename = "privileges")]
  privileges: Option<Vec<::models::AuthIdNtokenPrivilegeItem>>,
  /// Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).
  #[serde(rename = "resume")]
  resume: Option<String>
}

impl RolePrivileges {
  pub fn new() -> RolePrivileges {
    RolePrivileges {
      privileges: None,
      resume: None
    }
  }

  pub fn set_privileges(&mut self, privileges: Vec<::models::AuthIdNtokenPrivilegeItem>) {
    self.privileges = Some(privileges);
  }

  pub fn with_privileges(mut self, privileges: Vec<::models::AuthIdNtokenPrivilegeItem>) -> RolePrivileges {
    self.privileges = Some(privileges);
    self
  }

  pub fn privileges(&self) -> Option<&Vec<::models::AuthIdNtokenPrivilegeItem>> {
    self.privileges.as_ref()
  }

  pub fn reset_privileges(&mut self) {
    self.privileges = None;
  }

  pub fn set_resume(&mut self, resume: String) {
    self.resume = Some(resume);
  }

  pub fn with_resume(mut self, resume: String) -> RolePrivileges {
    self.resume = Some(resume);
    self
  }

  pub fn resume(&self) -> Option<&String> {
    self.resume.as_ref()
  }

  pub fn reset_resume(&mut self) {
    self.resume = None;
  }

}



