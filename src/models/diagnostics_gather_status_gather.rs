/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct DiagnosticsGatherStatusGather {
  #[serde(rename = "path")]
  path: Option<String>,
  /// 
  #[serde(rename = "status")]
  status: Option<::models::DiagnosticsGatherStatusGatherStatus>
}

impl DiagnosticsGatherStatusGather {
  pub fn new() -> DiagnosticsGatherStatusGather {
    DiagnosticsGatherStatusGather {
      path: None,
      status: None
    }
  }

  pub fn set_path(&mut self, path: String) {
    self.path = Some(path);
  }

  pub fn with_path(mut self, path: String) -> DiagnosticsGatherStatusGather {
    self.path = Some(path);
    self
  }

  pub fn path(&self) -> Option<&String> {
    self.path.as_ref()
  }

  pub fn reset_path(&mut self) {
    self.path = None;
  }

  pub fn set_status(&mut self, status: ::models::DiagnosticsGatherStatusGatherStatus) {
    self.status = Some(status);
  }

  pub fn with_status(mut self, status: ::models::DiagnosticsGatherStatusGatherStatus) -> DiagnosticsGatherStatusGather {
    self.status = Some(status);
    self
  }

  pub fn status(&self) -> Option<&::models::DiagnosticsGatherStatusGatherStatus> {
    self.status.as_ref()
  }

  pub fn reset_status(&mut self) {
    self.status = None;
  }

}



