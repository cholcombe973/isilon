/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct SyncJobPolicyFileMatchingPattern {
  /// An array containing objects with \"and_criteria\" properties, each set of and_criteria will be logically OR'ed together to create the full file matching pattern.
  #[serde(rename = "or_criteria")]
  or_criteria: Option<Vec<::models::SyncJobPolicyFileMatchingPatternOrCriteriaItem>>
}

impl SyncJobPolicyFileMatchingPattern {
  pub fn new() -> SyncJobPolicyFileMatchingPattern {
    SyncJobPolicyFileMatchingPattern {
      or_criteria: None
    }
  }

  pub fn set_or_criteria(&mut self, or_criteria: Vec<::models::SyncJobPolicyFileMatchingPatternOrCriteriaItem>) {
    self.or_criteria = Some(or_criteria);
  }

  pub fn with_or_criteria(mut self, or_criteria: Vec<::models::SyncJobPolicyFileMatchingPatternOrCriteriaItem>) -> SyncJobPolicyFileMatchingPattern {
    self.or_criteria = Some(or_criteria);
    self
  }

  pub fn or_criteria(&self) -> Option<&Vec<::models::SyncJobPolicyFileMatchingPatternOrCriteriaItem>> {
    self.or_criteria.as_ref()
  }

  pub fn reset_or_criteria(&mut self) {
    self.or_criteria = None;
  }

}



