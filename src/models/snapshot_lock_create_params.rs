/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct SnapshotLockCreateParams {
  /// The Unix Epoch time the snapshot lock will expire and be eligible for automatic deletion.
  #[serde(rename = "expires")]
  expires: Option<i32>,
  /// Free form comment.
  #[serde(rename = "comment")]
  comment: Option<String>
}

impl SnapshotLockCreateParams {
  pub fn new() -> SnapshotLockCreateParams {
    SnapshotLockCreateParams {
      expires: None,
      comment: None
    }
  }

  pub fn set_expires(&mut self, expires: i32) {
    self.expires = Some(expires);
  }

  pub fn with_expires(mut self, expires: i32) -> SnapshotLockCreateParams {
    self.expires = Some(expires);
    self
  }

  pub fn expires(&self) -> Option<&i32> {
    self.expires.as_ref()
  }

  pub fn reset_expires(&mut self) {
    self.expires = None;
  }

  pub fn set_comment(&mut self, comment: String) {
    self.comment = Some(comment);
  }

  pub fn with_comment(mut self, comment: String) -> SnapshotLockCreateParams {
    self.comment = Some(comment);
    self
  }

  pub fn comment(&self) -> Option<&String> {
    self.comment.as_ref()
  }

  pub fn reset_comment(&mut self) {
    self.comment = None;
  }

}



