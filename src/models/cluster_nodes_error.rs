/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ClusterNodesError {
  /// Last upgrade step which failed on node.
  #[serde(rename = "failed_upgrade_action")]
  failed_upgrade_action: Option<String>,
  /// Upgrade error log.
  #[serde(rename = "log")]
  log: Option<String>
}

impl ClusterNodesError {
  pub fn new() -> ClusterNodesError {
    ClusterNodesError {
      failed_upgrade_action: None,
      log: None
    }
  }

  pub fn set_failed_upgrade_action(&mut self, failed_upgrade_action: String) {
    self.failed_upgrade_action = Some(failed_upgrade_action);
  }

  pub fn with_failed_upgrade_action(mut self, failed_upgrade_action: String) -> ClusterNodesError {
    self.failed_upgrade_action = Some(failed_upgrade_action);
    self
  }

  pub fn failed_upgrade_action(&self) -> Option<&String> {
    self.failed_upgrade_action.as_ref()
  }

  pub fn reset_failed_upgrade_action(&mut self) {
    self.failed_upgrade_action = None;
  }

  pub fn set_log(&mut self, log: String) {
    self.log = Some(log);
  }

  pub fn with_log(mut self, log: String) -> ClusterNodesError {
    self.log = Some(log);
    self
  }

  pub fn log(&self) -> Option<&String> {
    self.log.as_ref()
  }

  pub fn reset_log(&mut self) {
    self.log = None;
  }

}



