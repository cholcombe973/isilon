/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct StoragepoolUnprovisionedUnprovisioned {
  /// A list of unprovisioned drives that do not belong to an unprovisioned node.
  #[serde(rename = "drives")]
  drives: Vec<::models::StoragepoolStatusUnprovisionedItem>,
  /// A list of lnns whose drives are all unprovisioned
  #[serde(rename = "lnns")]
  lnns: Vec<i32>
}

impl StoragepoolUnprovisionedUnprovisioned {
  pub fn new(drives: Vec<::models::StoragepoolStatusUnprovisionedItem>, lnns: Vec<i32>) -> StoragepoolUnprovisionedUnprovisioned {
    StoragepoolUnprovisionedUnprovisioned {
      drives: drives,
      lnns: lnns
    }
  }

  pub fn set_drives(&mut self, drives: Vec<::models::StoragepoolStatusUnprovisionedItem>) {
    self.drives = drives;
  }

  pub fn with_drives(mut self, drives: Vec<::models::StoragepoolStatusUnprovisionedItem>) -> StoragepoolUnprovisionedUnprovisioned {
    self.drives = drives;
    self
  }

  pub fn drives(&self) -> &Vec<::models::StoragepoolStatusUnprovisionedItem> {
    &self.drives
  }


  pub fn set_lnns(&mut self, lnns: Vec<i32>) {
    self.lnns = lnns;
  }

  pub fn with_lnns(mut self, lnns: Vec<i32>) -> StoragepoolUnprovisionedUnprovisioned {
    self.lnns = lnns;
    self
  }

  pub fn lnns(&self) -> &Vec<i32> {
    &self.lnns
  }


}



