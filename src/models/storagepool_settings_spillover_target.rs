/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct StoragepoolSettingsSpilloverTarget {
  /// Target pool ID if target specified, otherwise null.
  #[serde(rename = "name_or_id")]
  name_or_id: Option<String>,
  /// Type of target pool.
  #[serde(rename = "type")]
  _type: String
}

impl StoragepoolSettingsSpilloverTarget {
  pub fn new(_type: String) -> StoragepoolSettingsSpilloverTarget {
    StoragepoolSettingsSpilloverTarget {
      name_or_id: None,
      _type: _type
    }
  }

  pub fn set_name_or_id(&mut self, name_or_id: String) {
    self.name_or_id = Some(name_or_id);
  }

  pub fn with_name_or_id(mut self, name_or_id: String) -> StoragepoolSettingsSpilloverTarget {
    self.name_or_id = Some(name_or_id);
    self
  }

  pub fn name_or_id(&self) -> Option<&String> {
    self.name_or_id.as_ref()
  }

  pub fn reset_name_or_id(&mut self) {
    self.name_or_id = None;
  }

  pub fn set_type(&mut self, _type: String) {
    self._type = _type;
  }

  pub fn with_type(mut self, _type: String) -> StoragepoolSettingsSpilloverTarget {
    self._type = _type;
    self
  }

  pub fn _type(&self) -> &String {
    &self._type
  }


}



