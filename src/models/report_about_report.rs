/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ReportAboutReport {
  /// Whether report was manually requested (live) or scheduled.
  #[serde(rename = "generated")]
  generated: String,
  /// The system ID given to the report.
  #[serde(rename = "id")]
  id: String,
  /// Unix epoch time the report was taken.
  #[serde(rename = "time")]
  time: i32,
  /// Whether this is a summary or detail report.
  #[serde(rename = "type")]
  _type: String
}

impl ReportAboutReport {
  pub fn new(generated: String, id: String, time: i32, _type: String) -> ReportAboutReport {
    ReportAboutReport {
      generated: generated,
      id: id,
      time: time,
      _type: _type
    }
  }

  pub fn set_generated(&mut self, generated: String) {
    self.generated = generated;
  }

  pub fn with_generated(mut self, generated: String) -> ReportAboutReport {
    self.generated = generated;
    self
  }

  pub fn generated(&self) -> &String {
    &self.generated
  }


  pub fn set_id(&mut self, id: String) {
    self.id = id;
  }

  pub fn with_id(mut self, id: String) -> ReportAboutReport {
    self.id = id;
    self
  }

  pub fn id(&self) -> &String {
    &self.id
  }


  pub fn set_time(&mut self, time: i32) {
    self.time = time;
  }

  pub fn with_time(mut self, time: i32) -> ReportAboutReport {
    self.time = time;
    self
  }

  pub fn time(&self) -> &i32 {
    &self.time
  }


  pub fn set__type(&mut self, _type: String) {
    self._type = _type;
  }

  pub fn with__type(mut self, _type: String) -> ReportAboutReport {
    self._type = _type;
    self
  }

  pub fn _type(&self) -> &String {
    &self._type
  }


}



