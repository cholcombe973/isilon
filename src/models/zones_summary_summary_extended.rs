/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ZonesSummarySummaryExtended {
  /// The count of objects in the collection
  #[serde(rename = "count")]
  count: i32,
  /// List of zone names
  #[serde(rename = "list")]
  list: Option<Vec<String>>
}

impl ZonesSummarySummaryExtended {
  pub fn new(count: i32) -> ZonesSummarySummaryExtended {
    ZonesSummarySummaryExtended {
      count: count,
      list: None
    }
  }

  pub fn set_count(&mut self, count: i32) {
    self.count = count;
  }

  pub fn with_count(mut self, count: i32) -> ZonesSummarySummaryExtended {
    self.count = count;
    self
  }

  pub fn count(&self) -> &i32 {
    &self.count
  }


  pub fn set_list(&mut self, list: Vec<String>) {
    self.list = Some(list);
  }

  pub fn with_list(mut self, list: Vec<String>) -> ZonesSummarySummaryExtended {
    self.list = Some(list);
    self
  }

  pub fn list(&self) -> Option<&Vec<String>> {
    self.list.as_ref()
  }

  pub fn reset_list(&mut self) {
    self.list = None;
  }

}



