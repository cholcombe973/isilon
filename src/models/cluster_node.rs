/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// ClusterNode : Node information.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ClusterNode {
  /// List of the drives in this node.
  #[serde(rename = "drives")]
  drives: Option<Vec<::models::ClusterNodeDrive>>,
  /// Node state information (reported and modifiable).
  #[serde(rename = "state")]
  state: Option<::models::ClusterNodeState>
}

impl ClusterNode {
  /// Node information.
  pub fn new() -> ClusterNode {
    ClusterNode {
      drives: None,
      state: None
    }
  }

  pub fn set_drives(&mut self, drives: Vec<::models::ClusterNodeDrive>) {
    self.drives = Some(drives);
  }

  pub fn with_drives(mut self, drives: Vec<::models::ClusterNodeDrive>) -> ClusterNode {
    self.drives = Some(drives);
    self
  }

  pub fn drives(&self) -> Option<&Vec<::models::ClusterNodeDrive>> {
    self.drives.as_ref()
  }

  pub fn reset_drives(&mut self) {
    self.drives = None;
  }

  pub fn set_state(&mut self, state: ::models::ClusterNodeState) {
    self.state = Some(state);
  }

  pub fn with_state(mut self, state: ::models::ClusterNodeState) -> ClusterNode {
    self.state = Some(state);
    self
  }

  pub fn state(&self) -> Option<&::models::ClusterNodeState> {
    self.state.as_ref()
  }

  pub fn reset_state(&mut self) {
    self.state = None;
  }

}



