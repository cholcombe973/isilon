/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct NdmpContextsBreContext {
  /// Unique ID of NDMP BRE context
  #[serde(rename = "bre_context_id")]
  bre_context_id: Option<String>,
  /// Unique display id.
  #[serde(rename = "id")]
  id: Option<String>
}

impl NdmpContextsBreContext {
  pub fn new() -> NdmpContextsBreContext {
    NdmpContextsBreContext {
      bre_context_id: None,
      id: None
    }
  }

  pub fn set_bre_context_id(&mut self, bre_context_id: String) {
    self.bre_context_id = Some(bre_context_id);
  }

  pub fn with_bre_context_id(mut self, bre_context_id: String) -> NdmpContextsBreContext {
    self.bre_context_id = Some(bre_context_id);
    self
  }

  pub fn bre_context_id(&self) -> Option<&String> {
    self.bre_context_id.as_ref()
  }

  pub fn reset_bre_context_id(&mut self) {
    self.bre_context_id = None;
  }

  pub fn set_id(&mut self, id: String) {
    self.id = Some(id);
  }

  pub fn with_id(mut self, id: String) -> NdmpContextsBreContext {
    self.id = Some(id);
    self
  }

  pub fn id(&self) -> Option<&String> {
    self.id.as_ref()
  }

  pub fn reset_id(&mut self) {
    self.id = None;
  }

}



