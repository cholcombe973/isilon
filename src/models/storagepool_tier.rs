/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct StoragepoolTier {
  /// The names or IDs of the tier's children.
  #[serde(rename = "children")]
  children: Option<Vec<String>>,
  /// The tier name.
  #[serde(rename = "name")]
  name: Option<String>
}

impl StoragepoolTier {
  pub fn new() -> StoragepoolTier {
    StoragepoolTier {
      children: None,
      name: None
    }
  }

  pub fn set_children(&mut self, children: Vec<String>) {
    self.children = Some(children);
  }

  pub fn with_children(mut self, children: Vec<String>) -> StoragepoolTier {
    self.children = Some(children);
    self
  }

  pub fn children(&self) -> Option<&Vec<String>> {
    self.children.as_ref()
  }

  pub fn reset_children(&mut self) {
    self.children = None;
  }

  pub fn set_name(&mut self, name: String) {
    self.name = Some(name);
  }

  pub fn with_name(mut self, name: String) -> StoragepoolTier {
    self.name = Some(name);
    self
  }

  pub fn name(&self) -> Option<&String> {
    self.name.as_ref()
  }

  pub fn reset_name(&mut self) {
    self.name = None;
  }

}



