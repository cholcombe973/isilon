/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct HardwareStopItem {
  /// The nodepool ID or name on which to stop the upgrade.
  #[serde(rename = "node_pool")]
  node_pool: String,
  /// Argument to indicate whether the nodepool should split into upgraded and non-upgraded pools or not. Default is false.
  #[serde(rename = "split")]
  split: Option<bool>
}

impl HardwareStopItem {
  pub fn new(node_pool: String) -> HardwareStopItem {
    HardwareStopItem {
      node_pool: node_pool,
      split: None
    }
  }

  pub fn set_node_pool(&mut self, node_pool: String) {
    self.node_pool = node_pool;
  }

  pub fn with_node_pool(mut self, node_pool: String) -> HardwareStopItem {
    self.node_pool = node_pool;
    self
  }

  pub fn node_pool(&self) -> &String {
    &self.node_pool
  }


  pub fn set_split(&mut self, split: bool) {
    self.split = Some(split);
  }

  pub fn with_split(mut self, split: bool) -> HardwareStopItem {
    self.split = Some(split);
    self
  }

  pub fn split(&self) -> Option<&bool> {
    self.split.as_ref()
  }

  pub fn reset_split(&mut self) {
    self.split = None;
  }

}



