/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct EventAlertConditions {
  #[serde(rename = "alert-conditions")]
  alert_conditions: Option<Vec<::models::EventAlertConditionsAlertCondition>>
}

impl EventAlertConditions {
  pub fn new() -> EventAlertConditions {
    EventAlertConditions {
      alert_conditions: None
    }
  }

  pub fn set_alert_conditions(&mut self, alert_conditions: Vec<::models::EventAlertConditionsAlertCondition>) {
    self.alert_conditions = Some(alert_conditions);
  }

  pub fn with_alert_conditions(mut self, alert_conditions: Vec<::models::EventAlertConditionsAlertCondition>) -> EventAlertConditions {
    self.alert_conditions = Some(alert_conditions);
    self
  }

  pub fn alert_conditions(&self) -> Option<&Vec<::models::EventAlertConditionsAlertCondition>> {
    self.alert_conditions.as_ref()
  }

  pub fn reset_alert_conditions(&mut self) {
    self.alert_conditions = None;
  }

}



