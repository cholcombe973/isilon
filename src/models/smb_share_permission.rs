/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct SmbSharePermission {
  /// Specifies the file system rights that are allowed or denied.
  #[serde(rename = "permission")]
  permission: String,
  /// Determines whether the permission is allowed or denied.
  #[serde(rename = "permission_type")]
  permission_type: String,
  /// Specifies properties for a persona, which consists of either a 'type' and a 'name' or an 'ID'.
  #[serde(rename = "trustee")]
  trustee: ::models::AuthAccessAccessItemFileGroup
}

impl SmbSharePermission {
  pub fn new(permission: String, permission_type: String, trustee: ::models::AuthAccessAccessItemFileGroup) -> SmbSharePermission {
    SmbSharePermission {
      permission: permission,
      permission_type: permission_type,
      trustee: trustee
    }
  }

  pub fn set_permission(&mut self, permission: String) {
    self.permission = permission;
  }

  pub fn with_permission(mut self, permission: String) -> SmbSharePermission {
    self.permission = permission;
    self
  }

  pub fn permission(&self) -> &String {
    &self.permission
  }


  pub fn set_permission_type(&mut self, permission_type: String) {
    self.permission_type = permission_type;
  }

  pub fn with_permission_type(mut self, permission_type: String) -> SmbSharePermission {
    self.permission_type = permission_type;
    self
  }

  pub fn permission_type(&self) -> &String {
    &self.permission_type
  }


  pub fn set_trustee(&mut self, trustee: ::models::AuthAccessAccessItemFileGroup) {
    self.trustee = trustee;
  }

  pub fn with_trustee(mut self, trustee: ::models::AuthAccessAccessItemFileGroup) -> SmbSharePermission {
    self.trustee = trustee;
    self
  }

  pub fn trustee(&self) -> &::models::AuthAccessAccessItemFileGroup {
    &self.trustee
  }


}



