/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct DedupeReport {
  /// The phase of the job this report was generated for.
  #[serde(rename = "phase")]
  phase: Option<i32>,
  /// The report results.
  #[serde(rename = "results")]
  results: Option<String>,
  /// The time this report was generated in Unix epoch seconds.
  #[serde(rename = "time")]
  time: Option<i32>
}

impl DedupeReport {
  pub fn new() -> DedupeReport {
    DedupeReport {
      phase: None,
      results: None,
      time: None
    }
  }

  pub fn set_phase(&mut self, phase: i32) {
    self.phase = Some(phase);
  }

  pub fn with_phase(mut self, phase: i32) -> DedupeReport {
    self.phase = Some(phase);
    self
  }

  pub fn phase(&self) -> Option<&i32> {
    self.phase.as_ref()
  }

  pub fn reset_phase(&mut self) {
    self.phase = None;
  }

  pub fn set_results(&mut self, results: String) {
    self.results = Some(results);
  }

  pub fn with_results(mut self, results: String) -> DedupeReport {
    self.results = Some(results);
    self
  }

  pub fn results(&self) -> Option<&String> {
    self.results.as_ref()
  }

  pub fn reset_results(&mut self) {
    self.results = None;
  }

  pub fn set_time(&mut self, time: i32) {
    self.time = Some(time);
  }

  pub fn with_time(mut self, time: i32) -> DedupeReport {
    self.time = Some(time);
    self
  }

  pub fn time(&self) -> Option<&i32> {
    self.time.as_ref()
  }

  pub fn reset_time(&mut self) {
    self.time = None;
  }

}



