/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct SyncJobPhase {
  /// The time the job ended this phase.
  #[serde(rename = "end_time")]
  end_time: Option<i32>,
  /// The phase that the job was in.
  #[serde(rename = "phase")]
  phase: Option<String>,
  /// The time the job began this phase.
  #[serde(rename = "start_time")]
  start_time: Option<i32>
}

impl SyncJobPhase {
  pub fn new() -> SyncJobPhase {
    SyncJobPhase {
      end_time: None,
      phase: None,
      start_time: None
    }
  }

  pub fn set_end_time(&mut self, end_time: i32) {
    self.end_time = Some(end_time);
  }

  pub fn with_end_time(mut self, end_time: i32) -> SyncJobPhase {
    self.end_time = Some(end_time);
    self
  }

  pub fn end_time(&self) -> Option<&i32> {
    self.end_time.as_ref()
  }

  pub fn reset_end_time(&mut self) {
    self.end_time = None;
  }

  pub fn set_phase(&mut self, phase: String) {
    self.phase = Some(phase);
  }

  pub fn with_phase(mut self, phase: String) -> SyncJobPhase {
    self.phase = Some(phase);
    self
  }

  pub fn phase(&self) -> Option<&String> {
    self.phase.as_ref()
  }

  pub fn reset_phase(&mut self) {
    self.phase = None;
  }

  pub fn set_start_time(&mut self, start_time: i32) {
    self.start_time = Some(start_time);
  }

  pub fn with_start_time(mut self, start_time: i32) -> SyncJobPhase {
    self.start_time = Some(start_time);
    self
  }

  pub fn start_time(&self) -> Option<&i32> {
    self.start_time.as_ref()
  }

  pub fn reset_start_time(&mut self) {
    self.start_time = None;
  }

}



