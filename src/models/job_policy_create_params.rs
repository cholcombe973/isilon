/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct JobPolicyCreateParams {
  /// A helpful human-readable description of the impact policy.
  #[serde(rename = "description")]
  description: Option<String>,
  #[serde(rename = "intervals")]
  intervals: Option<Vec<::models::JobPolicyInterval>>,
  /// The name of the impact policy.
  #[serde(rename = "name")]
  name: String
}

impl JobPolicyCreateParams {
  pub fn new(name: String) -> JobPolicyCreateParams {
    JobPolicyCreateParams {
      description: None,
      intervals: None,
      name: name
    }
  }

  pub fn set_description(&mut self, description: String) {
    self.description = Some(description);
  }

  pub fn with_description(mut self, description: String) -> JobPolicyCreateParams {
    self.description = Some(description);
    self
  }

  pub fn description(&self) -> Option<&String> {
    self.description.as_ref()
  }

  pub fn reset_description(&mut self) {
    self.description = None;
  }

  pub fn set_intervals(&mut self, intervals: Vec<::models::JobPolicyInterval>) {
    self.intervals = Some(intervals);
  }

  pub fn with_intervals(mut self, intervals: Vec<::models::JobPolicyInterval>) -> JobPolicyCreateParams {
    self.intervals = Some(intervals);
    self
  }

  pub fn intervals(&self) -> Option<&Vec<::models::JobPolicyInterval>> {
    self.intervals.as_ref()
  }

  pub fn reset_intervals(&mut self) {
    self.intervals = None;
  }

  pub fn set_name(&mut self, name: String) {
    self.name = name;
  }

  pub fn with_name(mut self, name: String) -> JobPolicyCreateParams {
    self.name = name;
    self
  }

  pub fn name(&self) -> &String {
    &self.name
  }


}



