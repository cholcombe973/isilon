/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct DebugStatsUnknown {
  /// The number of calls.
  #[serde(rename = "calls")]
  calls: Option<i32>,
  /// The number of errors.
  #[serde(rename = "errors")]
  errors: Option<i32>,
  /// The total amount of time spent in this method.
  #[serde(rename = "time")]
  time: Option<f32>
}

impl DebugStatsUnknown {
  pub fn new() -> DebugStatsUnknown {
    DebugStatsUnknown {
      calls: None,
      errors: None,
      time: None
    }
  }

  pub fn set_calls(&mut self, calls: i32) {
    self.calls = Some(calls);
  }

  pub fn with_calls(mut self, calls: i32) -> DebugStatsUnknown {
    self.calls = Some(calls);
    self
  }

  pub fn calls(&self) -> Option<&i32> {
    self.calls.as_ref()
  }

  pub fn reset_calls(&mut self) {
    self.calls = None;
  }

  pub fn set_errors(&mut self, errors: i32) {
    self.errors = Some(errors);
  }

  pub fn with_errors(mut self, errors: i32) -> DebugStatsUnknown {
    self.errors = Some(errors);
    self
  }

  pub fn errors(&self) -> Option<&i32> {
    self.errors.as_ref()
  }

  pub fn reset_errors(&mut self) {
    self.errors = None;
  }

  pub fn set_time(&mut self, time: f32) {
    self.time = Some(time);
  }

  pub fn with_time(mut self, time: f32) -> DebugStatsUnknown {
    self.time = Some(time);
    self
  }

  pub fn time(&self) -> Option<&f32> {
    self.time.as_ref()
  }

  pub fn reset_time(&mut self) {
    self.time = None;
  }

}



