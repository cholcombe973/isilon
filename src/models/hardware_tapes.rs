/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// HardwareTapes : Get list Tape and Changer devices

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct HardwareTapes {
  /// Information of Tape/MC device
  #[serde(rename = "devices")]
  devices: Option<::models::HardwareTapesDevices>,
  /// Resume string returned by previous query.
  #[serde(rename = "resume")]
  resume: Option<String>,
  /// The number of devices
  #[serde(rename = "total")]
  total: Option<i32>
}

impl HardwareTapes {
  /// Get list Tape and Changer devices
  pub fn new() -> HardwareTapes {
    HardwareTapes {
      devices: None,
      resume: None,
      total: None
    }
  }

  pub fn set_devices(&mut self, devices: ::models::HardwareTapesDevices) {
    self.devices = Some(devices);
  }

  pub fn with_devices(mut self, devices: ::models::HardwareTapesDevices) -> HardwareTapes {
    self.devices = Some(devices);
    self
  }

  pub fn devices(&self) -> Option<&::models::HardwareTapesDevices> {
    self.devices.as_ref()
  }

  pub fn reset_devices(&mut self) {
    self.devices = None;
  }

  pub fn set_resume(&mut self, resume: String) {
    self.resume = Some(resume);
  }

  pub fn with_resume(mut self, resume: String) -> HardwareTapes {
    self.resume = Some(resume);
    self
  }

  pub fn resume(&self) -> Option<&String> {
    self.resume.as_ref()
  }

  pub fn reset_resume(&mut self) {
    self.resume = None;
  }

  pub fn set_total(&mut self, total: i32) {
    self.total = Some(total);
  }

  pub fn with_total(mut self, total: i32) -> HardwareTapes {
    self.total = Some(total);
    self
  }

  pub fn total(&self) -> Option<&i32> {
    self.total.as_ref()
  }

  pub fn reset_total(&mut self) {
    self.total = None;
  }

}



