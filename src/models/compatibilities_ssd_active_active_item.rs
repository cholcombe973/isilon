/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct CompatibilitiesSsdActiveActiveItem {
  /// The node class of an ssd compatibility
  #[serde(rename = "class_1")]
  class_1: String,
  /// Is this SSD Compatibility Count Compatible.
  #[serde(rename = "count")]
  count: bool,
  /// The id of this ssd compatibility
  #[serde(rename = "id")]
  id: i32
}

impl CompatibilitiesSsdActiveActiveItem {
  pub fn new(class_1: String, count: bool, id: i32) -> CompatibilitiesSsdActiveActiveItem {
    CompatibilitiesSsdActiveActiveItem {
      class_1: class_1,
      count: count,
      id: id
    }
  }

  pub fn set_class_1(&mut self, class_1: String) {
    self.class_1 = class_1;
  }

  pub fn with_class_1(mut self, class_1: String) -> CompatibilitiesSsdActiveActiveItem {
    self.class_1 = class_1;
    self
  }

  pub fn class_1(&self) -> &String {
    &self.class_1
  }


  pub fn set_count(&mut self, count: bool) {
    self.count = count;
  }

  pub fn with_count(mut self, count: bool) -> CompatibilitiesSsdActiveActiveItem {
    self.count = count;
    self
  }

  pub fn count(&self) -> &bool {
    &self.count
  }


  pub fn set_id(&mut self, id: i32) {
    self.id = id;
  }

  pub fn with_id(mut self, id: i32) -> CompatibilitiesSsdActiveActiveItem {
    self.id = id;
    self
  }

  pub fn id(&self) -> &i32 {
    &self.id
  }


}



