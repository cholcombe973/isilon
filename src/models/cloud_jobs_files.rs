/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct CloudJobsFiles {
  #[serde(rename = "files")]
  files: Option<Vec<String>>,
  /// Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).
  #[serde(rename = "resume")]
  resume: Option<String>
}

impl CloudJobsFiles {
  pub fn new() -> CloudJobsFiles {
    CloudJobsFiles {
      files: None,
      resume: None
    }
  }

  pub fn set_files(&mut self, files: Vec<String>) {
    self.files = Some(files);
  }

  pub fn with_files(mut self, files: Vec<String>) -> CloudJobsFiles {
    self.files = Some(files);
    self
  }

  pub fn files(&self) -> Option<&Vec<String>> {
    self.files.as_ref()
  }

  pub fn reset_files(&mut self) {
    self.files = None;
  }

  pub fn set_resume(&mut self, resume: String) {
    self.resume = Some(resume);
  }

  pub fn with_resume(mut self, resume: String) -> CloudJobsFiles {
    self.resume = Some(resume);
    self
  }

  pub fn resume(&self) -> Option<&String> {
    self.resume.as_ref()
  }

  pub fn reset_resume(&mut self) {
    self.resume = None;
  }

}



