/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct CloudProxies {
  #[serde(rename = "proxies")]
  proxies: Option<Vec<::models::CloudProxyExtended>>,
  /// Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).
  #[serde(rename = "resume")]
  resume: Option<String>
}

impl CloudProxies {
  pub fn new() -> CloudProxies {
    CloudProxies {
      proxies: None,
      resume: None
    }
  }

  pub fn set_proxies(&mut self, proxies: Vec<::models::CloudProxyExtended>) {
    self.proxies = Some(proxies);
  }

  pub fn with_proxies(mut self, proxies: Vec<::models::CloudProxyExtended>) -> CloudProxies {
    self.proxies = Some(proxies);
    self
  }

  pub fn proxies(&self) -> Option<&Vec<::models::CloudProxyExtended>> {
    self.proxies.as_ref()
  }

  pub fn reset_proxies(&mut self) {
    self.proxies = None;
  }

  pub fn set_resume(&mut self, resume: String) {
    self.resume = Some(resume);
  }

  pub fn with_resume(mut self, resume: String) -> CloudProxies {
    self.resume = Some(resume);
    self
  }

  pub fn resume(&self) -> Option<&String> {
    self.resume.as_ref()
  }

  pub fn reset_resume(&mut self) {
    self.resume = None;
  }

}



