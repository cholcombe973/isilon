/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct SettingsAccessTimeExtended {
  /// Enable access time tracking.
  #[serde(rename = "enabled")]
  enabled: Option<bool>,
  /// Access time tracked on each cluster file accurate to this number of seconds.
  #[serde(rename = "precision")]
  precision: Option<i32>
}

impl SettingsAccessTimeExtended {
  pub fn new() -> SettingsAccessTimeExtended {
    SettingsAccessTimeExtended {
      enabled: None,
      precision: None
    }
  }

  pub fn set_enabled(&mut self, enabled: bool) {
    self.enabled = Some(enabled);
  }

  pub fn with_enabled(mut self, enabled: bool) -> SettingsAccessTimeExtended {
    self.enabled = Some(enabled);
    self
  }

  pub fn enabled(&self) -> Option<&bool> {
    self.enabled.as_ref()
  }

  pub fn reset_enabled(&mut self) {
    self.enabled = None;
  }

  pub fn set_precision(&mut self, precision: i32) {
    self.precision = Some(precision);
  }

  pub fn with_precision(mut self, precision: i32) -> SettingsAccessTimeExtended {
    self.precision = Some(precision);
    self
  }

  pub fn precision(&self) -> Option<&i32> {
    self.precision.as_ref()
  }

  pub fn reset_precision(&mut self) {
    self.precision = None;
  }

}



