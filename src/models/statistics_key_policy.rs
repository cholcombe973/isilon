/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct StatisticsKeyPolicy {
  /// Time between samples in seconds.
  #[serde(rename = "interval")]
  interval: i32,
  /// If true, history is persisted.
  #[serde(rename = "persistent")]
  persistent: bool,
  /// Time in seconds to keep data.
  #[serde(rename = "retention")]
  retention: i32
}

impl StatisticsKeyPolicy {
  pub fn new(interval: i32, persistent: bool, retention: i32) -> StatisticsKeyPolicy {
    StatisticsKeyPolicy {
      interval: interval,
      persistent: persistent,
      retention: retention
    }
  }

  pub fn set_interval(&mut self, interval: i32) {
    self.interval = interval;
  }

  pub fn with_interval(mut self, interval: i32) -> StatisticsKeyPolicy {
    self.interval = interval;
    self
  }

  pub fn interval(&self) -> &i32 {
    &self.interval
  }


  pub fn set_persistent(&mut self, persistent: bool) {
    self.persistent = persistent;
  }

  pub fn with_persistent(mut self, persistent: bool) -> StatisticsKeyPolicy {
    self.persistent = persistent;
    self
  }

  pub fn persistent(&self) -> &bool {
    &self.persistent
  }


  pub fn set_retention(&mut self, retention: i32) {
    self.retention = retention;
  }

  pub fn with_retention(mut self, retention: i32) -> StatisticsKeyPolicy {
    self.retention = retention;
    self
  }

  pub fn retention(&self) -> &i32 {
    &self.retention
  }


}



