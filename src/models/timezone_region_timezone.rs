/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct TimezoneRegionTimezone {
  /// The abbreviation for this timezone.
  #[serde(rename = "abbreviation")]
  abbreviation: Option<String>,
  /// The timezone path.  This is the unique identifier for the timezone.
  #[serde(rename = "path")]
  path: String
}

impl TimezoneRegionTimezone {
  pub fn new(path: String) -> TimezoneRegionTimezone {
    TimezoneRegionTimezone {
      abbreviation: None,
      path: path
    }
  }

  pub fn set_abbreviation(&mut self, abbreviation: String) {
    self.abbreviation = Some(abbreviation);
  }

  pub fn with_abbreviation(mut self, abbreviation: String) -> TimezoneRegionTimezone {
    self.abbreviation = Some(abbreviation);
    self
  }

  pub fn abbreviation(&self) -> Option<&String> {
    self.abbreviation.as_ref()
  }

  pub fn reset_abbreviation(&mut self) {
    self.abbreviation = None;
  }

  pub fn set_path(&mut self, path: String) {
    self.path = path;
  }

  pub fn with_path(mut self, path: String) -> TimezoneRegionTimezone {
    self.path = path;
    self
  }

  pub fn path(&self) -> &String {
    &self.path
  }


}



