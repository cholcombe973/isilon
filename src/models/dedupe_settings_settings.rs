/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct DedupeSettingsSettings {
  /// The paths that will be assessed.
  #[serde(rename = "assess_paths")]
  assess_paths: Option<Vec<String>>,
  /// The schedule for the dedupe job.
  #[serde(rename = "dedupe_schedule")]
  dedupe_schedule: Option<String>,
  /// The paths that will be deduped.
  #[serde(rename = "paths")]
  paths: Option<Vec<String>>
}

impl DedupeSettingsSettings {
  pub fn new() -> DedupeSettingsSettings {
    DedupeSettingsSettings {
      assess_paths: None,
      dedupe_schedule: None,
      paths: None
    }
  }

  pub fn set_assess_paths(&mut self, assess_paths: Vec<String>) {
    self.assess_paths = Some(assess_paths);
  }

  pub fn with_assess_paths(mut self, assess_paths: Vec<String>) -> DedupeSettingsSettings {
    self.assess_paths = Some(assess_paths);
    self
  }

  pub fn assess_paths(&self) -> Option<&Vec<String>> {
    self.assess_paths.as_ref()
  }

  pub fn reset_assess_paths(&mut self) {
    self.assess_paths = None;
  }

  pub fn set_dedupe_schedule(&mut self, dedupe_schedule: String) {
    self.dedupe_schedule = Some(dedupe_schedule);
  }

  pub fn with_dedupe_schedule(mut self, dedupe_schedule: String) -> DedupeSettingsSettings {
    self.dedupe_schedule = Some(dedupe_schedule);
    self
  }

  pub fn dedupe_schedule(&self) -> Option<&String> {
    self.dedupe_schedule.as_ref()
  }

  pub fn reset_dedupe_schedule(&mut self) {
    self.dedupe_schedule = None;
  }

  pub fn set_paths(&mut self, paths: Vec<String>) {
    self.paths = Some(paths);
  }

  pub fn with_paths(mut self, paths: Vec<String>) -> DedupeSettingsSettings {
    self.paths = Some(paths);
    self
  }

  pub fn paths(&self) -> Option<&Vec<String>> {
    self.paths.as_ref()
  }

  pub fn reset_paths(&mut self) {
    self.paths = None;
  }

}



