/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct NamespaceMetadata {
  #[serde(rename = "action")]
  action: Option<String>,
  #[serde(rename = "attrs")]
  attrs: Option<Vec<::models::NamespaceMetadataAttrs>>
}

impl NamespaceMetadata {
  pub fn new() -> NamespaceMetadata {
    NamespaceMetadata {
      action: None,
      attrs: None
    }
  }

  pub fn set_action(&mut self, action: String) {
    self.action = Some(action);
  }

  pub fn with_action(mut self, action: String) -> NamespaceMetadata {
    self.action = Some(action);
    self
  }

  pub fn action(&self) -> Option<&String> {
    self.action.as_ref()
  }

  pub fn reset_action(&mut self) {
    self.action = None;
  }

  pub fn set_attrs(&mut self, attrs: Vec<::models::NamespaceMetadataAttrs>) {
    self.attrs = Some(attrs);
  }

  pub fn with_attrs(mut self, attrs: Vec<::models::NamespaceMetadataAttrs>) -> NamespaceMetadata {
    self.attrs = Some(attrs);
    self
  }

  pub fn attrs(&self) -> Option<&Vec<::models::NamespaceMetadataAttrs>> {
    self.attrs.as_ref()
  }

  pub fn reset_attrs(&mut self) {
    self.attrs = None;
  }

}



