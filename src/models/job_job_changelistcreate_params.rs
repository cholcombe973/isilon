/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct JobJobChangelistcreateParams {
  /// Newer snapshot ID.
  #[serde(rename = "newer_snapid")]
  newer_snapid: i32,
  /// Older snapshot ID.
  #[serde(rename = "older_snapid")]
  older_snapid: i32,
  /// Whether to retain the replication record after a changelist is created. Retaining a replication record allows a changelist to be recreated later.
  #[serde(rename = "retain_repstate")]
  retain_repstate: Option<bool>
}

impl JobJobChangelistcreateParams {
  pub fn new(newer_snapid: i32, older_snapid: i32) -> JobJobChangelistcreateParams {
    JobJobChangelistcreateParams {
      newer_snapid: newer_snapid,
      older_snapid: older_snapid,
      retain_repstate: None
    }
  }

  pub fn set_newer_snapid(&mut self, newer_snapid: i32) {
    self.newer_snapid = newer_snapid;
  }

  pub fn with_newer_snapid(mut self, newer_snapid: i32) -> JobJobChangelistcreateParams {
    self.newer_snapid = newer_snapid;
    self
  }

  pub fn newer_snapid(&self) -> &i32 {
    &self.newer_snapid
  }


  pub fn set_older_snapid(&mut self, older_snapid: i32) {
    self.older_snapid = older_snapid;
  }

  pub fn with_older_snapid(mut self, older_snapid: i32) -> JobJobChangelistcreateParams {
    self.older_snapid = older_snapid;
    self
  }

  pub fn older_snapid(&self) -> &i32 {
    &self.older_snapid
  }


  pub fn set_retain_repstate(&mut self, retain_repstate: bool) {
    self.retain_repstate = Some(retain_repstate);
  }

  pub fn with_retain_repstate(mut self, retain_repstate: bool) -> JobJobChangelistcreateParams {
    self.retain_repstate = Some(retain_repstate);
    self
  }

  pub fn retain_repstate(&self) -> Option<&bool> {
    self.retain_repstate.as_ref()
  }

  pub fn reset_retain_repstate(&mut self) {
    self.retain_repstate = None;
  }

}



