/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct HardwareStartItem {
  /// The nodepool ID or name on which to start the upgrade.
  #[serde(rename = "node_pool")]
  node_pool: String,
  /// The type of upgrade to start.
  #[serde(rename = "upgrade_type")]
  upgrade_type: String
}

impl HardwareStartItem {
  pub fn new(node_pool: String, upgrade_type: String) -> HardwareStartItem {
    HardwareStartItem {
      node_pool: node_pool,
      upgrade_type: upgrade_type
    }
  }

  pub fn set_node_pool(&mut self, node_pool: String) {
    self.node_pool = node_pool;
  }

  pub fn with_node_pool(mut self, node_pool: String) -> HardwareStartItem {
    self.node_pool = node_pool;
    self
  }

  pub fn node_pool(&self) -> &String {
    &self.node_pool
  }


  pub fn set_upgrade_type(&mut self, upgrade_type: String) {
    self.upgrade_type = upgrade_type;
  }

  pub fn with_upgrade_type(mut self, upgrade_type: String) -> HardwareStartItem {
    self.upgrade_type = upgrade_type;
    self
  }

  pub fn upgrade_type(&self) -> &String {
    &self.upgrade_type
  }


}



