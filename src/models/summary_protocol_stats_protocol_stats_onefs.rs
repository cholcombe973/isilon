/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct SummaryProtocolStatsProtocolStatsOnefs {
  /// OneFS throughput in MB/s in.
  #[serde(rename = "in")]
  _in: f32,
  /// OneFS throughput in MB/s out.
  #[serde(rename = "out")]
  out: f32,
  /// OneFS throughput in MB/s total.
  #[serde(rename = "total")]
  total: f32
}

impl SummaryProtocolStatsProtocolStatsOnefs {
  pub fn new(_in: f32, out: f32, total: f32) -> SummaryProtocolStatsProtocolStatsOnefs {
    SummaryProtocolStatsProtocolStatsOnefs {
      _in: _in,
      out: out,
      total: total
    }
  }

  pub fn set_in(&mut self, _in: f32) {
    self._in = _in;
  }

  pub fn with_in(mut self, _in: f32) -> SummaryProtocolStatsProtocolStatsOnefs {
    self._in = _in;
    self
  }

  pub fn _in(&self) -> &f32 {
    &self._in
  }


  pub fn set_out(&mut self, out: f32) {
    self.out = out;
  }

  pub fn with_out(mut self, out: f32) -> SummaryProtocolStatsProtocolStatsOnefs {
    self.out = out;
    self
  }

  pub fn out(&self) -> &f32 {
    &self.out
  }


  pub fn set_total(&mut self, total: f32) {
    self.total = total;
  }

  pub fn with_total(mut self, total: f32) -> SummaryProtocolStatsProtocolStatsOnefs {
    self.total = total;
    self
  }

  pub fn total(&self) -> &f32 {
    &self.total
  }


}



