/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct QuotaQuotaUsage {
  /// Number of inodes (filesystem entities) used by governed data.
  #[serde(rename = "inodes")]
  inodes: i32,
  /// Apparent bytes used by governed data.
  #[serde(rename = "logical")]
  logical: i32,
  /// Bytes used for governed data and filesystem overhead.
  #[serde(rename = "physical")]
  physical: i32
}

impl QuotaQuotaUsage {
  pub fn new(inodes: i32, logical: i32, physical: i32) -> QuotaQuotaUsage {
    QuotaQuotaUsage {
      inodes: inodes,
      logical: logical,
      physical: physical
    }
  }

  pub fn set_inodes(&mut self, inodes: i32) {
    self.inodes = inodes;
  }

  pub fn with_inodes(mut self, inodes: i32) -> QuotaQuotaUsage {
    self.inodes = inodes;
    self
  }

  pub fn inodes(&self) -> &i32 {
    &self.inodes
  }


  pub fn set_logical(&mut self, logical: i32) {
    self.logical = logical;
  }

  pub fn with_logical(mut self, logical: i32) -> QuotaQuotaUsage {
    self.logical = logical;
    self
  }

  pub fn logical(&self) -> &i32 {
    &self.logical
  }


  pub fn set_physical(&mut self, physical: i32) {
    self.physical = physical;
  }

  pub fn with_physical(mut self, physical: i32) -> QuotaQuotaUsage {
    self.physical = physical;
    self
  }

  pub fn physical(&self) -> &i32 {
    &self.physical
  }


}



