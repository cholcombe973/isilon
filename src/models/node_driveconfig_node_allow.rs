/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct NodeDriveconfigNodeAllow {
  /// Allow formatting a drive model with unknown firmware.
  #[serde(rename = "format_unknown_firmware")]
  format_unknown_firmware: Option<bool>,
  /// Allow formatting an unknown drive model.
  #[serde(rename = "format_unknown_model")]
  format_unknown_model: Option<bool>
}

impl NodeDriveconfigNodeAllow {
  pub fn new() -> NodeDriveconfigNodeAllow {
    NodeDriveconfigNodeAllow {
      format_unknown_firmware: None,
      format_unknown_model: None
    }
  }

  pub fn set_format_unknown_firmware(&mut self, format_unknown_firmware: bool) {
    self.format_unknown_firmware = Some(format_unknown_firmware);
  }

  pub fn with_format_unknown_firmware(mut self, format_unknown_firmware: bool) -> NodeDriveconfigNodeAllow {
    self.format_unknown_firmware = Some(format_unknown_firmware);
    self
  }

  pub fn format_unknown_firmware(&self) -> Option<&bool> {
    self.format_unknown_firmware.as_ref()
  }

  pub fn reset_format_unknown_firmware(&mut self) {
    self.format_unknown_firmware = None;
  }

  pub fn set_format_unknown_model(&mut self, format_unknown_model: bool) {
    self.format_unknown_model = Some(format_unknown_model);
  }

  pub fn with_format_unknown_model(mut self, format_unknown_model: bool) -> NodeDriveconfigNodeAllow {
    self.format_unknown_model = Some(format_unknown_model);
    self
  }

  pub fn format_unknown_model(&self) -> Option<&bool> {
    self.format_unknown_model.as_ref()
  }

  pub fn reset_format_unknown_model(&mut self) {
    self.format_unknown_model = None;
  }

}



