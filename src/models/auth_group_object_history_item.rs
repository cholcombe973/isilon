/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct AuthGroupObjectHistoryItem {
  /// Specifies properties for a persona, which consists of either a 'type' and a 'name' or an 'ID'.
  #[serde(rename = "gid")]
  gid: Option<::models::AuthAccessAccessItemFileGroup>,
  /// Specifies properties for a persona, which consists of either a 'type' and a 'name' or an 'ID'.
  #[serde(rename = "sid")]
  sid: Option<::models::AuthAccessAccessItemFileGroup>,
  /// Specifies properties for a persona, which consists of either a 'type' and a 'name' or an 'ID'.
  #[serde(rename = "uid")]
  uid: Option<::models::AuthAccessAccessItemFileGroup>
}

impl AuthGroupObjectHistoryItem {
  pub fn new() -> AuthGroupObjectHistoryItem {
    AuthGroupObjectHistoryItem {
      gid: None,
      sid: None,
      uid: None
    }
  }

  pub fn set_gid(&mut self, gid: ::models::AuthAccessAccessItemFileGroup) {
    self.gid = Some(gid);
  }

  pub fn with_gid(mut self, gid: ::models::AuthAccessAccessItemFileGroup) -> AuthGroupObjectHistoryItem {
    self.gid = Some(gid);
    self
  }

  pub fn gid(&self) -> Option<&::models::AuthAccessAccessItemFileGroup> {
    self.gid.as_ref()
  }

  pub fn reset_gid(&mut self) {
    self.gid = None;
  }

  pub fn set_sid(&mut self, sid: ::models::AuthAccessAccessItemFileGroup) {
    self.sid = Some(sid);
  }

  pub fn with_sid(mut self, sid: ::models::AuthAccessAccessItemFileGroup) -> AuthGroupObjectHistoryItem {
    self.sid = Some(sid);
    self
  }

  pub fn sid(&self) -> Option<&::models::AuthAccessAccessItemFileGroup> {
    self.sid.as_ref()
  }

  pub fn reset_sid(&mut self) {
    self.sid = None;
  }

  pub fn set_uid(&mut self, uid: ::models::AuthAccessAccessItemFileGroup) {
    self.uid = Some(uid);
  }

  pub fn with_uid(mut self, uid: ::models::AuthAccessAccessItemFileGroup) -> AuthGroupObjectHistoryItem {
    self.uid = Some(uid);
    self
  }

  pub fn uid(&self) -> Option<&::models::AuthAccessAccessItemFileGroup> {
    self.uid.as_ref()
  }

  pub fn reset_uid(&mut self) {
    self.uid = None;
  }

}



