/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct SummaryProtocolStatsProtocolStatsDisk {
  /// Disk iops
  #[serde(rename = "iops")]
  iops: f32,
  /// Disk reads
  #[serde(rename = "read")]
  read: f32,
  /// Disk writes
  #[serde(rename = "write")]
  write: f32
}

impl SummaryProtocolStatsProtocolStatsDisk {
  pub fn new(iops: f32, read: f32, write: f32) -> SummaryProtocolStatsProtocolStatsDisk {
    SummaryProtocolStatsProtocolStatsDisk {
      iops: iops,
      read: read,
      write: write
    }
  }

  pub fn set_iops(&mut self, iops: f32) {
    self.iops = iops;
  }

  pub fn with_iops(mut self, iops: f32) -> SummaryProtocolStatsProtocolStatsDisk {
    self.iops = iops;
    self
  }

  pub fn iops(&self) -> &f32 {
    &self.iops
  }


  pub fn set_read(&mut self, read: f32) {
    self.read = read;
  }

  pub fn with_read(mut self, read: f32) -> SummaryProtocolStatsProtocolStatsDisk {
    self.read = read;
    self
  }

  pub fn read(&self) -> &f32 {
    &self.read
  }


  pub fn set_write(&mut self, write: f32) {
    self.write = write;
  }

  pub fn with_write(mut self, write: f32) -> SummaryProtocolStatsProtocolStatsDisk {
    self.write = write;
    self
  }

  pub fn write(&self) -> &f32 {
    &self.write
  }


}



