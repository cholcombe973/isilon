/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct AuditProgressProgress {
  /// Specifies the last protocol audit event time consumed by the CEE forwarder.
  #[serde(rename = "protocol_audit_cee_time")]
  protocol_audit_cee_time: Option<i32>,
  /// Specifies the last logged audit protocol event time.
  #[serde(rename = "protocol_audit_log_time")]
  protocol_audit_log_time: Option<i32>,
  /// Specifies the last protocol audit event time consumed by the Syslog forwarder.
  #[serde(rename = "protocol_audit_syslog_time")]
  protocol_audit_syslog_time: Option<i32>
}

impl AuditProgressProgress {
  pub fn new() -> AuditProgressProgress {
    AuditProgressProgress {
      protocol_audit_cee_time: None,
      protocol_audit_log_time: None,
      protocol_audit_syslog_time: None
    }
  }

  pub fn set_protocol_audit_cee_time(&mut self, protocol_audit_cee_time: i32) {
    self.protocol_audit_cee_time = Some(protocol_audit_cee_time);
  }

  pub fn with_protocol_audit_cee_time(mut self, protocol_audit_cee_time: i32) -> AuditProgressProgress {
    self.protocol_audit_cee_time = Some(protocol_audit_cee_time);
    self
  }

  pub fn protocol_audit_cee_time(&self) -> Option<&i32> {
    self.protocol_audit_cee_time.as_ref()
  }

  pub fn reset_protocol_audit_cee_time(&mut self) {
    self.protocol_audit_cee_time = None;
  }

  pub fn set_protocol_audit_log_time(&mut self, protocol_audit_log_time: i32) {
    self.protocol_audit_log_time = Some(protocol_audit_log_time);
  }

  pub fn with_protocol_audit_log_time(mut self, protocol_audit_log_time: i32) -> AuditProgressProgress {
    self.protocol_audit_log_time = Some(protocol_audit_log_time);
    self
  }

  pub fn protocol_audit_log_time(&self) -> Option<&i32> {
    self.protocol_audit_log_time.as_ref()
  }

  pub fn reset_protocol_audit_log_time(&mut self) {
    self.protocol_audit_log_time = None;
  }

  pub fn set_protocol_audit_syslog_time(&mut self, protocol_audit_syslog_time: i32) {
    self.protocol_audit_syslog_time = Some(protocol_audit_syslog_time);
  }

  pub fn with_protocol_audit_syslog_time(mut self, protocol_audit_syslog_time: i32) -> AuditProgressProgress {
    self.protocol_audit_syslog_time = Some(protocol_audit_syslog_time);
    self
  }

  pub fn protocol_audit_syslog_time(&self) -> Option<&i32> {
    self.protocol_audit_syslog_time.as_ref()
  }

  pub fn reset_protocol_audit_syslog_time(&mut self) {
    self.protocol_audit_syslog_time = None;
  }

}



