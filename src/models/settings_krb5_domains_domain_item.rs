/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct SettingsKrb5DomainsDomainItem {
  /// Specifies the name of the domain.
  #[serde(rename = "domain")]
  domain: Option<String>,
  /// ID of the domain
  #[serde(rename = "id")]
  id: Option<String>,
  /// Specifies the name of the realm.
  #[serde(rename = "realm")]
  realm: Option<String>
}

impl SettingsKrb5DomainsDomainItem {
  pub fn new() -> SettingsKrb5DomainsDomainItem {
    SettingsKrb5DomainsDomainItem {
      domain: None,
      id: None,
      realm: None
    }
  }

  pub fn set_domain(&mut self, domain: String) {
    self.domain = Some(domain);
  }

  pub fn with_domain(mut self, domain: String) -> SettingsKrb5DomainsDomainItem {
    self.domain = Some(domain);
    self
  }

  pub fn domain(&self) -> Option<&String> {
    self.domain.as_ref()
  }

  pub fn reset_domain(&mut self) {
    self.domain = None;
  }

  pub fn set_id(&mut self, id: String) {
    self.id = Some(id);
  }

  pub fn with_id(mut self, id: String) -> SettingsKrb5DomainsDomainItem {
    self.id = Some(id);
    self
  }

  pub fn id(&self) -> Option<&String> {
    self.id.as_ref()
  }

  pub fn reset_id(&mut self) {
    self.id = None;
  }

  pub fn set_realm(&mut self, realm: String) {
    self.realm = Some(realm);
  }

  pub fn with_realm(mut self, realm: String) -> SettingsKrb5DomainsDomainItem {
    self.realm = Some(realm);
    self
  }

  pub fn realm(&self) -> Option<&String> {
    self.realm.as_ref()
  }

  pub fn reset_realm(&mut self) {
    self.realm = None;
  }

}



