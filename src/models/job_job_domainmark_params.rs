/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct JobJobDomainmarkParams {
  /// Whether this is a delete operation.
  #[serde(rename = "delete")]
  delete: Option<bool>,
  /// Base IFS path to associate with the domain.
  #[serde(rename = "root")]
  root: String,
  /// The type of domain.
  #[serde(rename = "type")]
  _type: String
}

impl JobJobDomainmarkParams {
  pub fn new(root: String, _type: String) -> JobJobDomainmarkParams {
    JobJobDomainmarkParams {
      delete: None,
      root: root,
      _type: _type
    }
  }

  pub fn set_delete(&mut self, delete: bool) {
    self.delete = Some(delete);
  }

  pub fn with_delete(mut self, delete: bool) -> JobJobDomainmarkParams {
    self.delete = Some(delete);
    self
  }

  pub fn delete(&self) -> Option<&bool> {
    self.delete.as_ref()
  }

  pub fn reset_delete(&mut self) {
    self.delete = None;
  }

  pub fn set_root(&mut self, root: String) {
    self.root = root;
  }

  pub fn with_root(mut self, root: String) -> JobJobDomainmarkParams {
    self.root = root;
    self
  }

  pub fn root(&self) -> &String {
    &self.root
  }


  pub fn set_type(&mut self, _type: String) {
    self._type = _type;
  }

  pub fn with_type(mut self, _type: String) -> JobJobDomainmarkParams {
    self._type = _type;
    self
  }

  pub fn _type(&self) -> &String {
    &self._type
  }


}



