/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// EventEventgroupOccurrence : Ignore flag for eventgroup.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct EventEventgroupOccurrence {
  /// True if eventgroup is to be ignored
  #[serde(rename = "ignore")]
  ignore: Option<bool>,
  /// True if eventgroup is to be resolved
  #[serde(rename = "resolved")]
  resolved: Option<bool>
}

impl EventEventgroupOccurrence {
  /// Ignore flag for eventgroup.
  pub fn new() -> EventEventgroupOccurrence {
    EventEventgroupOccurrence {
      ignore: None,
      resolved: None
    }
  }

  pub fn set_ignore(&mut self, ignore: bool) {
    self.ignore = Some(ignore);
  }

  pub fn with_ignore(mut self, ignore: bool) -> EventEventgroupOccurrence {
    self.ignore = Some(ignore);
    self
  }

  pub fn ignore(&self) -> Option<&bool> {
    self.ignore.as_ref()
  }

  pub fn reset_ignore(&mut self) {
    self.ignore = None;
  }

  pub fn set_resolved(&mut self, resolved: bool) {
    self.resolved = Some(resolved);
  }

  pub fn with_resolved(mut self, resolved: bool) -> EventEventgroupOccurrence {
    self.resolved = Some(resolved);
    self
  }

  pub fn resolved(&self) -> Option<&bool> {
    self.resolved.as_ref()
  }

  pub fn reset_resolved(&mut self) {
    self.resolved = None;
  }

}



