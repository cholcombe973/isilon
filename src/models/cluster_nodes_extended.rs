/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// ClusterNodesExtended : View information about nodes during an upgrade, rollback, or pre-upgrade assessment.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ClusterNodesExtended {
  /// List of detailed info of nodes which are part of the current upgrade
  #[serde(rename = "nodes")]
  nodes: Option<Vec<::models::ClusterNodes>>,
  /// Total number of nodes the upgrade framework is aware of and was able to collect info for at this point.
  #[serde(rename = "total")]
  total: Option<i32>
}

impl ClusterNodesExtended {
  /// View information about nodes during an upgrade, rollback, or pre-upgrade assessment.
  pub fn new() -> ClusterNodesExtended {
    ClusterNodesExtended {
      nodes: None,
      total: None
    }
  }

  pub fn set_nodes(&mut self, nodes: Vec<::models::ClusterNodes>) {
    self.nodes = Some(nodes);
  }

  pub fn with_nodes(mut self, nodes: Vec<::models::ClusterNodes>) -> ClusterNodesExtended {
    self.nodes = Some(nodes);
    self
  }

  pub fn nodes(&self) -> Option<&Vec<::models::ClusterNodes>> {
    self.nodes.as_ref()
  }

  pub fn reset_nodes(&mut self) {
    self.nodes = None;
  }

  pub fn set_total(&mut self, total: i32) {
    self.total = Some(total);
  }

  pub fn with_total(mut self, total: i32) -> ClusterNodesExtended {
    self.total = Some(total);
    self
  }

  pub fn total(&self) -> Option<&i32> {
    self.total.as_ref()
  }

  pub fn reset_total(&mut self) {
    self.total = None;
  }

}



