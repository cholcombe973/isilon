/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct NodeDriveconfigNodeSpinWait {
  /// Seconds to wait between enabling a bay and checking for an inserted drive.
  #[serde(rename = "check_drive")]
  check_drive: Option<i32>,
  /// Seconds to wait between enabling a bay and enabling another bay.
  #[serde(rename = "stagger")]
  stagger: Option<i32>
}

impl NodeDriveconfigNodeSpinWait {
  pub fn new() -> NodeDriveconfigNodeSpinWait {
    NodeDriveconfigNodeSpinWait {
      check_drive: None,
      stagger: None
    }
  }

  pub fn set_check_drive(&mut self, check_drive: i32) {
    self.check_drive = Some(check_drive);
  }

  pub fn with_check_drive(mut self, check_drive: i32) -> NodeDriveconfigNodeSpinWait {
    self.check_drive = Some(check_drive);
    self
  }

  pub fn check_drive(&self) -> Option<&i32> {
    self.check_drive.as_ref()
  }

  pub fn reset_check_drive(&mut self) {
    self.check_drive = None;
  }

  pub fn set_stagger(&mut self, stagger: i32) {
    self.stagger = Some(stagger);
  }

  pub fn with_stagger(mut self, stagger: i32) -> NodeDriveconfigNodeSpinWait {
    self.stagger = Some(stagger);
    self
  }

  pub fn stagger(&self) -> Option<&i32> {
    self.stagger.as_ref()
  }

  pub fn reset_stagger(&mut self) {
    self.stagger = None;
  }

}



