/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct IdResolutionPath {
  /// Logical Inode Number (LIN). A 64-bit number which uniquely identifies a file throughout its life.
  #[serde(rename = "lin")]
  lin: Option<String>,
  /// The full path associated with the lin. null if the lin cannot be resolved to a path.
  #[serde(rename = "path")]
  path: Option<String>
}

impl IdResolutionPath {
  pub fn new() -> IdResolutionPath {
    IdResolutionPath {
      lin: None,
      path: None
    }
  }

  pub fn set_lin(&mut self, lin: String) {
    self.lin = Some(lin);
  }

  pub fn with_lin(mut self, lin: String) -> IdResolutionPath {
    self.lin = Some(lin);
    self
  }

  pub fn lin(&self) -> Option<&String> {
    self.lin.as_ref()
  }

  pub fn reset_lin(&mut self) {
    self.lin = None;
  }

  pub fn set_path(&mut self, path: String) {
    self.path = Some(path);
  }

  pub fn with_path(mut self, path: String) -> IdResolutionPath {
    self.path = Some(path);
    self
  }

  pub fn path(&self) -> Option<&String> {
    self.path.as_ref()
  }

  pub fn reset_path(&mut self) {
    self.path = None;
  }

}



