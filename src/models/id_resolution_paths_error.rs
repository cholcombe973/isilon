/* 
 * Isilon SDK
 *
 * Isilon SDK - Language bindings for the OneFS API
 *
 * OpenAPI spec version: 5
 * Contact: sdk@isilon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct IdResolutionPathsError {
  #[serde(rename = "field")]
  field: Option<String>,
  #[serde(rename = "field_value")]
  field_value: Option<String>,
  #[serde(rename = "message")]
  message: Option<String>
}

impl IdResolutionPathsError {
  pub fn new() -> IdResolutionPathsError {
    IdResolutionPathsError {
      field: None,
      field_value: None,
      message: None
    }
  }

  pub fn set_field(&mut self, field: String) {
    self.field = Some(field);
  }

  pub fn with_field(mut self, field: String) -> IdResolutionPathsError {
    self.field = Some(field);
    self
  }

  pub fn field(&self) -> Option<&String> {
    self.field.as_ref()
  }

  pub fn reset_field(&mut self) {
    self.field = None;
  }

  pub fn set_field_value(&mut self, field_value: String) {
    self.field_value = Some(field_value);
  }

  pub fn with_field_value(mut self, field_value: String) -> IdResolutionPathsError {
    self.field_value = Some(field_value);
    self
  }

  pub fn field_value(&self) -> Option<&String> {
    self.field_value.as_ref()
  }

  pub fn reset_field_value(&mut self) {
    self.field_value = None;
  }

  pub fn set_message(&mut self, message: String) {
    self.message = Some(message);
  }

  pub fn with_message(mut self, message: String) -> IdResolutionPathsError {
    self.message = Some(message);
    self
  }

  pub fn message(&self) -> Option<&String> {
    self.message.as_ref()
  }

  pub fn reset_message(&mut self) {
    self.message = None;
  }

}



